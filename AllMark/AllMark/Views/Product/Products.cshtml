@using Kendo.Mvc.UI;
@using Utils.NationalCatalog.Models
@model IEnumerable<CatalogFeed>

@{
    Layout = "_Layout";
}
<div class="buttons" style="padding-bottom: 10px; padding-top: 10px">
    @(Html.Kendo()
        .Button()
        .Name("btAdd")
        .Content("Добавить товар")
        .Events(e => e.Click("btAdd_onClick"))
    )
</div>
@(Html.Kendo()
        .Grid<CatalogFeed>()
        .ColumnMenu(m => m.Enabled(true)
        .Sortable(true))
        .Resizable(r => r.Columns(true))
        .Selectable(s => s.Enabled(false))
        .Sortable()
        .Pageable(p => p.PageSizes(new int[]
                                        {
                                            10, 20, 50, 100, 200,
                                            500, 1000
                                        })
        .Refresh(true)
        .Messages(m =>
        {
            m.Display("{0} - {1} из {2} элементов");
            m.ItemsPerPage("элементов на странице");
            m.Empty("Нет элементов для отображения");
        }))
      .Name("grProducts")
      .HtmlAttributes(new { style = "height:100%" })
      //.DataSource(d => d
      //    .Ajax()
      //    .Read(read => read.Action("GetTickets", "Ticket")
      //                                       .Data("filters"))
      //                     .PageSize(50)
      //)
      //.Events(e => e.DataBound("grTickets_onDataBound"))
      .AutoBind(false)
      .Scrollable()
      .Groupable(g => g.Enabled(true)
                       .ShowFooter(true))
      .Selectable(s => s.Mode(GridSelectionMode.Single)
                        .Type(GridSelectionType.Row))
      .Columns(columns =>
      {
          //columns.Bound(p => p.Id);
          columns.Bound(p => p.GoodId);
          columns.Bound(p => p.GTIN);
          columns.Bound(p => p.GoodName);
          columns.Bound(p => p.TNVED);
          columns.Bound(p => p.Brand);
          columns.Bound(p => p.Moderation);
          columns.Bound(p => p.Barcodes);
          columns.Bound(p => p.Categories);
          columns.Bound(p => p.Attributes);
          columns.Bound(p => p.Images);
      })
)

@Html.Partial("_NewProduct")

<script type="text/javascript">
    function btAdd_onClick() {
        window.wndProduct_createWindow();
    }
</script>