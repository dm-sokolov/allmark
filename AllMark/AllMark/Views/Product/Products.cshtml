@using AllMark.Core.Models
@using Kendo.Mvc.UI;
@using AllMark.DTO
@using Utils.Kendo.Extensions
@using Utils.NationalCatalog.Models

@{
    ViewData["Title"] = "Товары";
}
<h2>@ViewData["Title"]</h2>

<div class="buttons" style="padding-bottom: 10px; padding-top: 10px">
    @(Html.Kendo()
        .Button()
        .Name("btAdd")
        .Content("Добавить товар")
        .Events(e => e.Click("btAdd_onClick"))
        )
    @(Html.Kendo()
        .DropDownTree()
        .Name("ddtSelectCategory")
        .Placeholder("Категория 'по умолчанию'")
        .DataSource(i=>i.Read(k=>k.Action("GetCategories", "Product")))
        .DataTextField(nameof(CatalogCategory.Name))
        .DataValueField(nameof(CatalogCategory.Id))
        .AutoWidth(true)
    )
    @(Html.Kendo()
        .Button()
        .Name("btLoadExcel")
        .Content("Загрузить Excel")
        .HtmlAttributes( new { style="float:right" })
        .Events(e => e.Click("btLoadExcel_onClick"))
    )
</div>
@(Html.Kendo()
        .Grid<ProductDto>()
        .BaseGrid()
        .Name("grProducts")
        .DataSource(ds => ds.Ajax()
                            .Read(read => read.Action("GetProducts", "Product"))
        )
        .AutoBind(false)
        .Columns(columns =>
        {
            columns.Bound(i => i.GoodId);
            columns.Bound(i => i.GoodName);
            columns.Bound(i => i.GTIN);
            columns.Bound(i => i.BrandId);
            columns.Bound(i => i.CategoryId);
        })
)

@(Html.Kendo()
    .Window()
    .Name("wndProduct")
    .Visible(false)
    .Title("Добавление товара")
    .Resizable(r => r.Enabled(false))
    //.Animation(true)
    .Width(800)
    .Actions(a => a.Close())
    .Draggable()
    //.Animation(animation => 
    //    animation.Open(effect => 
    //        effect.Fade(FadeDirection.In)))
    .Content(@<text>
                 <div class="container-fluid allmark-div">
                     <partial name="_NewProduct" />
                 </div>
              </text>)
    )

@(Html.Kendo()
    .Window()
    .Name("wndLoadExcel")
    .Visible(false)
    .Title("Загрузка Excel")
    .Resizable(r => r.Enabled(false))
    //.Animation(true)
    .Width(400)
    .Actions(a => a.Close())
    //.Animation(animation =>
    //          animation.Open(effect =>
    //              effect.Fade(FadeDirection.In)))
    .Content(@<text>
            <div class="k-content">
                @(Html.Kendo().Upload()
                  .Name("wndLoadExcel_files")
                  .Async(a => a
                      .Save("UploadExcel", "Product")
                      .AutoUpload(true)
                  )
                  .Validation(validation => validation.AllowedExtensions(new string[] { ".xls", ".xlsx" }))
                  .HtmlAttributes(new { aria_label = "files" })
                )
                <p style="padding-top: 1em; text-align: right">
                    <button type="submit" class="k-button k-primary">Загрузить</button>
                </p>
            </div>
    </text>)
)

<script type="text/javascript">
    function btAdd_onClick() {
        wndProduct_open();
    }

    

    function btLoadExcel_onClick() {
        $("#wndLoadExcel").getKendoWindow().center().open();
    }

    function wndProduct_open() {
        $('#wndProduct').getKendoWindow().center().open();
    }

    function wndAttributes_btSave_onClick() {
        var comboValues = $('[data-role=combobox]').toArray().map((i) => $(`#${i.id}`).getKendoComboBox()).map((i) => [i.element[0].id.replace('cbAttr', ''), i.value()]); 
        var textValues = $('.k-textbox').map((i, v) => {
            var elem = $(v);
            var controlName = elem.attr('id');
            return [[elem.attr('id').replace('tbAttr', ''), elem.val()]];
        });
    }
</script>